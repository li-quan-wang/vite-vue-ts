{
  "compilerOptions": {
    "target": "esnext", //指定ECMAScript目标版本
    "module": "esnext", //模块解析策略
    "baseUrl": ".", //解析非相对模块名的基准目录
    "moduleResolution": "node", //决定如何处理模块
    "allowJs": true, //允许编译javascript文件
    "allowSyntheticDefaultImports": true, //允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查
    "checkJs": true, //在 .js文件中报告错误。与 --allowJs配合使用
    "forceConsistentCasingInFileNames": true, //禁止对同一个文件的不一致的引用
    "noUnusedLocals": true, //若有未使用的局部变量则抛错
    "noUnusedParameters": true, //若有未使用的参数则抛错
    "strict": true, //启用所有严格类型检查选项
    "noImplicitAny": false, //在表达式和声明上有隐含的 any类型时报错
    "pretty": true, //给错误和消息设置样式，使用颜色和上下文
    "jsx": "preserve", //在 .tsx文件里支持JSX
    "sourceMap": true, //生成相应的 .map文件
    "resolveJsonModule": true, //包含.json扩展导入的模块
    "experimentalDecorators": true, //启用实验性的ES装饰器
    "esModuleInterop": true, //__importStar和__importDefault运行时Babel生态系统兼容性的帮助程序--allowSyntheticDefaultImports，并实现类型系统兼容性
    "lib": ["esnext", "dom"], //编译过程中需要引入的库文件的列表
    "types": ["vite/client", "node"], //要包含的类型声明文件名列表
    //相对于"baseUrl"进行解析
    "paths": {
      "/@/*": ["src/*"]
    }
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"],
  "exclude": ["node_modules", "dist"]
}
